cmake_minimum_required(VERSION 3.13)

include(ExternalProject)

# make a link to boost, because cmake expects it to be like boost_VERSION and
# in emscripten ports it is just boost_headers
execute_process(COMMAND ln -s "$ENV{EMSDK}/upstream/emscripten/cache/ports/boost_headers/" ./boost_1.75)

set(THRIFT_CMAKE_ARGS
-DBUILD_COMPILER=OFF 
-DBUILD_SHARED_LIBS=OFF
-DBUILD_TESTING=OFF 
-DBUILD_EXAMPLES=OFF
-DBUILD_TUTORIALS=OFF 
-DWITH_QT4=OFF
-DWITH_C_GLIB=OFF 
-DWITH_JAVA=OFF 
-DWITH_PYTHON=OFF 
-DWITH_HASKELL=OFF 
-DWITH_CPP=ON 
-DWITH_LIBEVENT=OFF 
-DBOOST_INCLUDEDIR=${CMAKE_BINARY_DIR}/boost_1.75
-DBoost_NO_BOOST_CMAKE=ON
-DCMAKE_BUILD_TYPE=Release
-DCMAKE_TOOLCHAIN_FILE=${CMAKE_TOOLCHAIN_FILE}
-DCMAKE_CXX_FLAGS="-fPIC"
-DCMAKE_C_FLAGS="-fPIC"
)
# Work around https://gitlab.kitware.com/cmake/cmake/issues/18865


message(WARNING ${THRIFT_CMAKE_ARGS})

ExternalProject_Add(thrift
    GIT_REPOSITORY    https://github.com/apache/thrift.git
    GIT_TAG           master
    SOURCE_DIR        "${CMAKE_BINARY_DIR}/../thrift-src"
    BINARY_DIR        "${CMAKE_BINARY_DIR}/../thrift-build"
#    CONFIGURE_COMMAND ""
#cd ${CMAKE_BINARY_DIR}/thrift-src && bash bootstrap.sh && export EMCC_CXXFLAGS="-fPIC -L/src/packages/openssl/dist/" && emconfigure ./configure --with-openssl=/src/packages/openssl/build/openssl-1.1.1n --disable-shared --enable-static && mkdir ${CMAKE_BINARY_DIR}/thrift-src/lib/cpp/src/thrift/thrift && cp ${CMAKE_SOURCE_DIR}/cmake/thrift/config.h ${CMAKE_BINARY_DIR}/thrift-src/lib/cpp/src/thrift/thrift
#    BUILD_COMMAND     "" 
#cd ${CMAKE_BINARY_DIR}/thrift-src/lib/cpp && make am__append_1=
    INSTALL_COMMAND   ""
    TEST_COMMAND      ""
    CMAKE_ARGS         ${THRIFT_CMAKE_ARGS} -L
    )

